const express = require('express');
const bodyParser = require('body-parser');
const mysql = require('mysql2');
const cors = require('cors');
const bcrypt = require('bcrypt'); // for hashing passwords

const app = express();

// Middleware
app.use(cors()); // Allow all origins
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// MySQL connection
const db = mysql.createConnection({
   Host: containers-us-west-123.railway.app
Database: railway
Username: railway
Password: <auto-generated>
Port: 3306

});

db.connect(err => {
    if (err) {
        console.error('❌ MySQL connection failed:', err);
    } else {
        console.log('✅ Connected to MySQL database');
    }
});

// =======================
// REGISTER
// =======================
app.post('/register', async (req, res) => {
    const { username, password, email } = req.body;

    if (!username || !password || !email) {
        return res.status(400).json({ success: false, message: 'All fields are required.' });
    }

    try {
        // Check if username exists
        db.query('SELECT * FROM users WHERE username = ?', [username], async (err, results) => {
            if (err) return res.status(500).json({ success: false, message: err.message });

            if (results.length > 0) {
                return res.json({ success: false, message: 'Username already exists.' });
            }

            // Hash the password
            const hashedPassword = await bcrypt.hash(password, 10);

            // Insert new user
            db.query(
                'INSERT INTO users (username, password, email) VALUES (?, ?, ?)',
                [username, hashedPassword, email],
                (err, result) => {
                    if (err) return res.status(500).json({ success: false, message: err.message });

                    res.json({ success: true, message: 'Registered successfully! Now please login.' });
                }
            );
        });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
});

// =======================
// LOGIN
// =======================
app.post('/login', (req, res) => {
    const { username, password } = req.body;

    if (!username || !password) {
        return res.status(400).json({ success: false, message: 'Username and password are required.' });
    }

    db.query('SELECT * FROM users WHERE username = ?', [username], async (err, results) => {
        if (err) return res.status(500).json({ success: false, message: err.message });

        if (results.length === 0) {
            return res.json({ success: false, message: 'Invalid username or password.' });
        }

        const user = results[0];
        const match = await bcrypt.compare(password, user.password);

        if (match) {
            res.json({ success: true, message: 'Login successful!' });
        } else {
            res.json({ success: false, message: 'Invalid username or password.' });
        }
    });
});

// =======================
// CHEF FORM SUBMISSION
// =======================
app.post('/ask-chef', (req, res) => {
    const { name, recipe } = req.body;

    if (!name || !recipe) {
        return res.status(400).json({ success: false, message: 'Name and recipe are required.' });
    }

    db.query('INSERT INTO recipes (name, recipe) VALUES (?, ?)', [name, recipe], (err, result) => {
        if (err) return res.status(500).json({ success: false, message: err.message });

        res.json({ success: true, message: 'Your recipe has been submitted successfully!' });
    });
});


// =======================
// ADD FOOD FACT
// =======================
app.post('/add-fact', (req, res) => {
    const { fact } = req.body;

    if (!fact) {
        return res.status(400).json({ success: false, message: 'Fact is required.' });
    }

    db.query('INSERT INTO food_facts (fact) VALUES (?)', [fact], (err, result) => {
        if (err) return res.status(500).json({ success: false, message: err.message });

        res.json({ success: true, message: 'Food fact added successfully!' });
    });
});

// =======================
// FOOD FACTS API
// =======================
app.get("/food-facts", (req, res) => {
  const query = "SELECT * FROM food_facts";

  db.query(query, (err, results) => {
    if (err) return res.status(500).json({ success: false, message: err.message });

    if (results.length === 0) {
      return res.json({ success: false, message: "No facts available." });
    }

    // Get a random fact
    const randomFact = results[Math.floor(Math.random() * results.length)];
    res.json({ success: true, data: randomFact });
  });
});


// Start server
app.listen(3000, () => {
    console.log('🚀 Server running on http://localhost:3000');
});
